---
alwaysApply: true
---

# 修正指示時の方針提示ルール

## 基本原則

ユーザーから修正指示を受けた場合、以下の手順を必ず実行してください：

### 1. 現状分析
- 現在のコードの動作を確認
- 問題点や課題を特定
- 関連するファイルやコンポーネントを調査

### 2. 方針提示
修正を実行する前に、以下の内容を含む方針を必ず提示してください：

#### A. 修正内容の整理
- 何を修正するか
- なぜその修正が必要か
- 修正の範囲と影響

#### B. 実装方針
- 具体的な修正手順
- 使用する技術やアプローチ
- 考慮すべき制約や前提条件

#### C. 代替案の検討
- 複数の実装方法がある場合は選択肢を提示
- 各選択肢のメリット・デメリット
- 推奨案とその理由

#### D. 影響範囲の確認
- 修正による影響を受けるファイル
- 既存機能への影響
- テストが必要な箇所

### 3. 承認後の実装
- ユーザーの承認を得てから実装を開始
- 実装中は進捗を報告
- 完了後は結果を確認

## 例外事項

以下の場合は方針提示を省略しても構いません：
- 明らかに軽微な修正（タイポ修正など）
- ユーザーが「方針は不要」と明示した場合
- 緊急性が高く、即座の対応が必要な場合

## 方針提示のテンプレート

```
## 修正方針

### 現状分析
- [現在の状況を説明]

### 修正内容
- [何を修正するか]
- [修正の理由]

### 実装方針
- [具体的な手順]
- [使用する技術・アプローチ]

### 代替案（該当する場合）
- [選択肢1]: [説明]
- [選択肢2]: [説明]
- **推奨**: [推奨案と理由]

### 影響範囲
- [影響を受けるファイル]
- [既存機能への影響]

この方針で実装を進めてよろしいでしょうか？
```